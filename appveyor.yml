environment:
  node_pre_gyp_accessKeyId:
    secure: 7DrSVc5eIGtmMcki5H+iRft+Tk3MJTwDBQEUuJHWaQ4=
  node_pre_gyp_secretAccessKey:
    secure: 1amwJJw9fu0j6dXnc5KsAQbSYf7Cjw/dapT6OZWABa6nc52grkKeLQ+DGaOfQz8i
  matrix:
    - nodejs_version: 0.10.30
      nw_version: 0.8.6
      PLATFORM: x86
      msvs_toolset: 12
    - nodejs_version: 0.10.30
      nw_version: 0.8.6
      PLATFORM: x64
      msvs_toolset: 12
    - nodejs_version: 0.11.13
      nw_version: 0.10.5
      PLATFORM: x86
      msvs_toolset: 12
    - nodejs_version: 0.11.13
      nw_version: 0.10.5
      PLATFORM: x64
      msvs_toolset: 12
    # custoom 64 bit visual studio 2014 builds
    - nodejs_version: 0.10.33
      PLATFORM: x64
      msvs_toolset: 14
      TOOLSET_ARGS: --dist-url=https://s3.amazonaws.com/mapbox/node-cpp11 --toolset=v140
    - nodejs_version: 0.11.14
      PLATFORM: x64
      msvs_toolset: 14
      TOOLSET_ARGS: --dist-url=https://s3.amazonaws.com/mapbox/node-cpp11 --toolset=v140

os: Visual Studio 2014 CTP4

install:
  - node -v
  - npm -v
  # add local node to path (since we install it for msvs_toolset == 14)
  - SET PATH=%CD%;%PATH%;
  # add local node-pre-gyp dir to path
  - SET PATH=node_modules\.bin;%PATH%
  # use 64 bit python if platform is 64 bit
  - if "%PLATFORM%" == "x64" set PATH=C:\Python27-x64;%PATH%
  # install node version per visual studio toolset
  - if "%msvs_toolset%" == "12" powershell Install-Product node $env:nodejs_version $env:Platform
  - if "%msvs_toolset%" == "14" powershell Write-Output "fetching https://mapbox.s3.amazonaws.com/node-cpp11/v$env:nodejs_version/$env:Platform/node.exe"
  - if "%msvs_toolset%" == "14" powershell Start-FileDownload "https://mapbox.s3.amazonaws.com/node-cpp11/v$env:nodejs_version/$env:Platform/node.exe"
  # only needed if not using 'os: Visual Studio 2014 CTP4'
  #- if "%msvs_toolset%" == "14" powershell Write-Output "https://mapbox.s3.amazonaws.com/node-cpp11/vcredist_$env:Platform.exe"
  #- if "%msvs_toolset%" == "14" powershell Start-FileDownload "https://mapbox.s3.amazonaws.com/node-cpp11/vcredist_$env:Platform.exe"
  #- if "%msvs_toolset%" == "14" .\vcredist_%platform%.exe /q /norestart
  - node -v
  - node -e "console.log(process.argv)"
  - npm -v
  # upgrade node-gyp to support --msvs_version=2013
  - npm install node-gyp
  # clear out node-gyp header cache
  - if "%msvs_toolset%" == "14" rd /s /q %USERPROFILE%\.node-gyp
  - SET PATH=C:\Program Files (x86)\MSBuild\%msvs_toolset%.0\bin;%PATH%
  - if %platform% == x64 CALL "C:\Program Files (x86)\Microsoft Visual Studio %msvs_toolset%.0\VC\vcvarsall.bat" amd64
  - if %platform% == x86 CALL "C:\Program Files (x86)\Microsoft Visual Studio %msvs_toolset%.0\VC\vcvarsall.bat" amd64_x86
  - npm install --build-from-source --msvs_version=2013 %TOOLSET_ARGS%
  - npm test
  - node-pre-gyp package %TOOLSET_ARGS%
  # make commit message env var shorter
  - SET CM=%APPVEYOR_REPO_COMMIT_MESSAGE%
  - if not "%CM%" == "%CM:[publish binary]=%" node-pre-gyp --msvs_version=2013 unpublish publish %TOOLSET_ARGS%
  - if "%msvs_toolset%" == "12" call scripts\build_for_node_webkit.cmd %PLATFORM%

build: OFF
test: OFF
deploy: OFF
